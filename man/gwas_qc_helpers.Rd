% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_qc.R
\name{gwas_qc_helpers}
\alias{gwas_qc_helpers}
\alias{is_complementary}
\alias{fetch_indel}
\alias{fetch_non_indel}
\alias{duplicated_SNP_lines}
\alias{slice1_SNP_lines}
\alias{fetch_same_direcrtion}
\alias{any_na}
\title{Helper functions for \code{leo.gwas_qc}}
\usage{
is_complementary(a1st, a2nd)

fetch_indel(df, type = "both")

fetch_non_indel(df)

duplicated_SNP_lines(
  df,
  type = "rm",
  dup_columns = c("SNP"),
  group_columns = dup_columns
)

slice1_SNP_lines(df, dup_columns = c("SNP"), group_columns = dup_columns)

fetch_same_direcrtion(df_x2, df_lg)

any_na(df)
}
\description{
Internal utilities used in the GWAS QC pipeline.
}
\section{Functions}{

\describe{
\item{\code{is_complementary(a1st, a2nd)}}{Check if two alleles form an A/T or C/G pair.}
\item{\code{fetch_indel(df, type)}}{Filter indels by allele-string length.}
\item{\code{fetch_non_indel(df)}}{Keep SNPs with single-base alleles.}
\item{\code{duplicated_SNP_lines(df, type, dup_columns, group_columns)}}{Get/remove duplicated SNP rows.}
\item{\code{slice1_SNP_lines(df, dup_columns, group_columns)}}{Within duplicated groups, keep first row.}
\item{\code{fetch_same_direcrtion(df_x2, df_lg)}}{Keep same-direction effects between datasets.}
\item{\code{any_na(df)}}{Count NAs per column.}
}
}

\section{Value}{

\itemize{
\item \code{is_complementary}: logical vector.
\item \code{fetch_indel}, \code{fetch_non_indel}, \code{slice1_SNP_lines}, \code{duplicated_SNP_lines("rm")}: data frame.
\item \code{duplicated_SNP_lines("get")}: data frame with \code{count} column.
\item \code{fetch_same_direcrtion}: filtered data frame (\code{df_x2} subset).
\item \code{any_na}: named numeric vector of NA counts.
}
}

\examples{
# Small demo dataset
df <- data.frame(
  SNP = c("rs1","rs2","rs3","rs2"),
  A1  = c("A","AT","C","C"),
  A2  = c("T","A","G","G"),
  OR  = c(1.2, 0.9, 1.1, 1.1)
)

# Complementary alleles
is_complementary("A","T")  # TRUE
is_complementary("A","G")  # FALSE

# Indels and non-indels
fetch_indel(df, "both")
fetch_non_indel(df)

# Duplicates by SNP
duplicated_SNP_lines(df, "get", dup_columns = "SNP")
slice1_SNP_lines(df, dup_columns = "SNP")

# Same-direction effects between two datasets
df2 <- transform(df, OR = c(1.1, 1.3, 0.8, 1.1))
fetch_same_direcrtion(df, df2)

# Count NA by column
any_na(df)

}
\keyword{internal}
