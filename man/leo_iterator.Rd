% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0.basic_tools.R
\name{leo_iterator}
\alias{leo_iterator}
\title{Leo batch iterator builder}
\usage{
leo_iterator(elements, batch_size)
}
\arguments{
\item{elements}{A vector or list to be iterated.}

\item{batch_size}{Number of elements per batch.}
}
\value{
A function (no arguments). Repeated calls produce successive batches or \code{NULL} if finished.
}
\description{
Sometimes you need to handle a large number of iterations, but multi-core
parallel computing can be trickyâ€”memory usage may grow beyond what is
actually required. This function helps by batching the iterations, so you
only process a limited number of elements at a time, preventing excessive
RAM consumption.
}
\details{
Each call to the returned function yields the next batch. Returns \code{NULL} when no more elements remain.
}
\examples{
# Suppose you have 25 elements and want to batch them in groups of 6
nums <- 1:25
it <- leo_iterator(nums, 6)
while (TRUE) {
  batch <- it()
  if (is.null(batch)) break

  # add your parallel process steps
  print(batch)
}
}
